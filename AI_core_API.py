# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yZ-g4TrUbUWQZ8uL6ypKjAKV5GLSp4Ng
"""

#from google.colab import drive
#drive.mount('/content/drive')

#conda install -U Flask gevent requests pillow

from tensorflow import keras
from keras.preprocessing.image import img_to_array
from PIL import Image
import numpy as np
import io
import flask
from flask import Flask, request, jsonify,render_template
import pickle
from tensorflow.keras import layers
from tensorflow.keras import mixed_precision
from keras.models import load_model
import base64

app = flask.Flask(__name__)
model = load_model('model50.h5')


def prepare_image(image, target):
    if image.mode != "RGB":
        image = image.convert("RGB")
    image = image.resize(150,150)
    image = img_to_array(image)
    image = np.expand_dims(image, axis=0)
    image = np.vstack([image])
    return image

@app.route("/predict", methods=["POST"])
def predict():
    if flask.request.method == "POST":
        if flask.request.files.get("image"):
            image = flask.request.files["image"]
            image = base64.b64decode(image)
            image = Image.open(io.BytesIO(image))
            image = prepare_image(image, target=(150, 150))
            val = np.argmax(model.predict(image))

            if val == 0:
                r="New Back"
            elif val == 1:
                r="New Front"
            elif val == 2:
                r="Old Back"
            else :
                r="Old Back"
            print(r)
            response={
                "Class":r
                }
    return jsonify(response)

if __name__ == "__main__":
    print(("* Loading Keras model and Flask starting server..."
        "please wait until server has fully started"))
    app.run(port=5000)